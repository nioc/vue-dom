# this dockerfile allow to build application from local source code (get from a prior git clone) and serve static files with nginx.

# build image: `docker build -f docker/Dockerfile-build -t nioc/vue-dom:nginx-alpine-master --build-arg JSON_RPC_API_URL=https://192.168.1.50/core/api/jeeApi.php --build-arg WEBSOCKET_URL=wss://192.168.1.50/socket/ .`
# start image: `docker run -d -p 80:80 --rm --name vue-dom-1 nioc/vue-dom:nginx-alpine-master`

### build stage ##
FROM node:lts-alpine as build-stage

# install app dependencies
WORKDIR /app
COPY package*.json ./
RUN npm install

# copy app files (exluding files defined in .dockerignore)
COPY . .

# build VueJS app
RUN npm run build


### production stage ##
FROM nginx:stable-alpine as production-stage

# declare arguments
ARG JSON_RPC_API_URL
ARG WEBSOCKET_URL=null

# copy builded app to nginx content folder
COPY --from=build-stage /app/dist /usr/share/nginx/html

# set local variable
RUN sed -i -r "s|jsonRpcApiUrl: 'https://10.0.0.0/core/api/jeeApi.php'|jsonRpcApiUrl: '${JSON_RPC_API_URL}'|g" /usr/share/nginx/html/local.js
RUN if [ "$WEBSOCKET_URL" != null ]; then sed -i -r "s|websocketUrl: null|websocketUrl: '${WEBSOCKET_URL}'|g" /usr/share/nginx/html/local.js ; fi

# start nginx in foreground (best practice in container)
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
