@charset "utf-8";

@import "/node_modules/bulma/sass/utilities/initial-variables";

$primary: #96c927;
$breadcrumb-item-color: $primary;
$link: $primary;
$navbar-breakpoint: 300px;

@mixin small-screen {
  @media screen and (max-width: 480px) {
    @content
  }
}

@mixin very-small-screen {
  @media screen and (max-width: 384px) {
    @content
  }
}

@import "/node_modules/bulma/bulma.sass";

$slider-thumb-background: findLightColor($primary);
$slider-thumb-border: 1px solid $primary;

::-webkit-scrollbar {
  width:10px;
  height:8px;
}
::-webkit-scrollbar-button {
  display:none;
}
::-webkit-scrollbar-thumb {
  background: #97979754;
  border-radius: 10px;
}
::-webkit-scrollbar-thumb:hover {
  background: #97979769;
}
::-webkit-scrollbar-thumb:active {
  background: #979797;
}

.navbar .router-link-active :not(.notification-counter) {
  color: $primary !important
}

.navbar-item .b-tooltip.is-bottom .tooltip-content {
  right: 0;
  left: auto;
  -webkit-transform: unset;
  transform: unset;
}

.notification-counter-mobile {
  position: absolute;
  right: 0.5rem;
  bottom: 0.5rem;
}
.notification-counter-mobile .tag {
  font-size: 0.5rem !important;
  background-color: rgba($danger, 1) !important;
}

.sidebar-content .router-link-exact-active :not(.notification-counter) {
  color: $primary !important
}
.sidebar-content img {
  max-height: 3.5rem;
}

.tree-link {
  stroke: #999;
  stroke-width: 2;
}
.tree-link-legend {
  font-size: 10px;
  text-anchor: middle;
  fill: #4a4a4a;
  fill-opacity: 0.6;
}
.tree-node-circle {
  fill: #fff;
}
.tree-node-icon {
  text-anchor: middle;
  font-size: 28px;
  fill: #4a4a4a;
}
.tree-node-legend {
  font-size: 11px;
  text-anchor: middle;
  fill: #4a4a4a;
}
.tree-node-legend-clickable {
  :hover {
    text-decoration: underline;
    cursor: pointer;
  }
}

@import "/node_modules/bulma/bulma";
@import '/node_modules/@oruga-ui/theme-bulma/dist/scss/bulma';

.toast-notification {
  box-shadow: 0 1px 4px rgb(0 0 0 / 12%), 0 0 6px rgb(0 0 0 / 4%);
  border-radius: 2em;
  padding: 0.75em 1.5em;
  pointer-events: auto;
}

.dialog .modal-card {
  max-width: 460px;
  width: auto;
    @include mobile {
      width: 100%;
      margin: 0 auto !important;
    }
    .modal-card-foot {
      justify-content: flex-end;
      .button {
        font-weight: 600;
      }
    }
}

[data-theme="dark"] {
  $primary: #96c927bd;
  $dt-black: #191919;
  $dt-black-bis: #232323;
  $dt-black-ter: #292929;
  $alpha-color-button: 0.74;
  background-color: $dt-black;
  .has-background-white-bis {
    background-color: $dt-black-ter !important;
  }
  .sidebar-content.is-light {
    background-color: $dt-black;
  }
  .message.is-light {
    background-color: darken($dt-black-bis, 1%) !important;
    .message-header {
      background-color: darken($dt-black-bis, 2%) !important;
      color: $grey-light !important;
    }
  }
  .menu-list {
    li ul {
      border-left-color: $grey-darker;
    }
    a:hover {
      &:not(.is-active) {
        background-color: $dt-black !important;
      }
      &.is-active {
        color: #fff;
      }
    }
  }
  .has-text-grey {
    color: $grey-light !important;
  }
  .card-header-title,
  .breadcrumb li.is-active a {
    color: $grey-light !important;
  }
  .box,
  .card {
    color: $grey-light;
    background-color: $dt-black-bis;
  }
  .label,
  .title {
    color: $grey-lighter;
  }
  :not(.notification) > .subtitle,
  .menu-label,
  .menu-list a:not(.is-active) {
    color: $grey-light;
  }
  .tag:not(body),
  .button {
    background-color: $dt-black-bis;
    border-color: $dt-black-ter;
    color: $grey-lightest;
    &:hover,
    &.is-hovered {
      background-color: bulmaLighten($dt-black-bis, 2.5%);
    }
    &:active,
    &.is-active {
      background-color: bulmaLighten($dt-black-bis, 6%);
    }
    @each $name, $pair in $button-colors {
      $color: nth($pair, 1);
      $color-invert: nth($pair, 2);
      &.is-#{$name} {
        background-color: rgba($color, $alpha-color-button);
        color: $grey-lightest;
        &.is-light {
          color: $color;
        }
        &:hover,
        &.is-hovered {
          background-color: rgba(bulmaLighten($color, 2.5%), $alpha-color-button);
        }
        &:active,
        &.is-active {
          background-color: rgba(bulmaLighten($color, 6%), $alpha-color-button);
        }
      }
    }
    &.is-light {
      background-color: rgba($dt-black, $alpha-color-button);
      &:hover,
      &.is-hovered {
        background-color: rgba(bulmaLighten($dt-black, 2.5%), $alpha-color-button);
      }
      &:active,
      &.is-active {
        background-color: rgba(bulmaLighten($dt-black, 6%), $alpha-color-button);
      }
    }
  }
  a:hover {
    color: $grey-lighter;
  }
  .textarea,
  .input {
    background-color: $dt-black-ter;
    border-color: $dt-black-bis;
    color: $grey-lightest;
    &::placeholder {
      color: $grey;
    }
  }
  fieldset[disabled] .select select,
  fieldset[disabled] .input {
    background-color: $grey-darker;
    border-color: $grey-darker;
    color: $grey-light;
  }
  fieldset[disabled] .button {
    background-color: bulmaLighten($dt-black-bis, 2.5%);
  }
  code {
    background-color: $dt-black-ter;
    color: #ff4a6f;
  }
  .control.has-icons-left .icon,
  .control.has-icons-right .icon {
    color: $grey;
  }
  .control.has-icons-left .input:focus ~ .icon,
  .control.has-icons-right .input:focus ~ .icon {
    color: $grey-light;
  }
  .navbar-dropdown {
    background-color: $dt-black-ter;
    border-top-color: $dt-black-bis;
    .navbar-item {
      color: $grey-light;
    }
    a.navbar-item:focus, a.navbar-item:hover {
      background-color: $dt-black-bis;
      color: $grey-lighter;
    }
  }
  .table {
    background-color: $dt-black;
    color: $grey-lighter;
    thead td,
    thead th {
      color: $grey-lighter;
    }
    td, th {
      border-color: $dt-black-ter;
    }
  }
  .table {
    &.is-striped {
      tbody {
        tr:not(.is-selected):nth-child(2n) {
          background-color: $dt-black-bis;
        }
      }
      &.is-hoverable {
        tbody {
          tr:not(.is-selected):hover {
            background-color: $dt-black-bis;
          }
          tr:not(.is-selected):hover:nth-child(2n) {
            background-color: $dt-black-ter;
          }
        }
      }
    }
    tr.detail {
      background-color: $dt-black-bis;
      -webkit-box-shadow: inset 0 1px 3px $dt-black;
      box-shadow: inset 0 1px 3px $dt-black;
      pre {
        background-color: $dt-black-ter;
        color: $grey-lightest;
      }
    }
  }
  .datepicker {
    .dropdown-content {
      background-color: $dt-black-ter;
    }
    .datepicker-table .datepicker-body {
      .datepicker-cell.is-selectable {
        color: $grey-lighter;
      }
      .datepicker-cell.is-unselectable {
        color: $grey;
      }
    }
    .datepicker-header {
      border-bottom-color: $dt-black;
    }
    .datepicker-footer {
      border-top-color: $dt-black;
    }
  }
  select {
    background-color: $grey-darker;
    border-color: $dt-black-ter;
    color: $grey-lighter;
  }
  .select {
    &:not(.is-multiple):not(.is-loading):hover::after {
      border-color: $grey-lighter
    }
  }
  .pagination-link.is-current,
  .switch input[type="checkbox"]:checked + .check {
    background-color: $primary;
  }
  .pagination-previous, .pagination-next, .pagination-link {
    border-color: $dt-black-bis;
  }
  .dropdown-content {
    background-color: $dt-black-ter;
    .dropdown-item {
      color: $grey-light;
    }
    a.dropdown-item:focus, a.dropdown-item:hover {
      background-color: $dt-black-bis;
      color: $grey-lighter;
    }
  }
  .taginput .taginput-container.is-focusable {
    background-color: $dt-black-ter;
    border-color: $dt-black-bis;
    .tag:not(body) {
      background-color: $grey-darker;
      color: $grey-lighter;
    }
  }
  .b-slider .b-slider-track {
    background: $grey-darker;
  }
  .progress {
    background: $grey-darker;
  }
  .notification {
    background-color: $dt-black-ter;
    color: $grey-lighter;
    &.is-primary {
      background-color: $primary;
    }
    @each $name, $pair in $colors {
      $color: nth($pair, 1);
      &.is-#{$name} {
        background-color: $color;
      }
    }
  }
  .modal-card-head,
  .modal-card-foot {
    background-color: $grey-darker;
  }
  .modal-card-head {
    border-bottom-color: $grey-dark;
  }
  .modal-card-foot {
    border-top-color: $grey-dark;
  }
  .modal-card-title {
    color: $grey-light;
  }
  .modal-card-body {
    background-color: $grey-dark;
    color: $grey-lighter;
  }
  .modal-close,
  .delete {
    background-color: $grey-darker;
    &:hover {
      background-color: $grey;
    }
    &::before,
    &::after {
      background-color: $grey-lighter;
    }
  }
  .loading .loading-overlay,
  .loading-overlay .loading-background {
    background-color: rgba($dt-black-bis, 0.5);
  }
  .b-slider {
    &.is-primary .b-slider-fill {
      background-color: $primary !important;
    }
    .b-slider-thumb-wrapper .b-slider-thumb {
      background-color: findDarkColor(rgba($primary, 1));
      color: $grey-lightest
    }
  }
  .tree-link {
    stroke: #888;
  }
  .tree-link-legend {
    fill: #c8c8c8;
  }
  .tree-node-circle {
    fill: #171717;
  }
  .tree-node-icon {
    fill: #c8c8c8;
  }
  .tree-node-legend {
    fill: #c8c8c8;
  }
}

.button.is-ghost:hover {
  text-decoration: none !important;
}
@each $name, $pair in $colors {
  $color: nth($pair, 1);
  .button.is-ghost-#{$name}:focus,
  .button.is-ghost-#{$name}:hover {
    color: $color !important
  }
  .has-text-#{$name}-mid-dark {
    color: rgba(darken($color, 20%), 1) !important;
  }
}

a {
  text-decoration: none !important;
}

.breadcrumb ul {
  flex-wrap: nowrap;
  overflow: auto;
}
.breadcrumb li:first-child::before {
  content: "\00a0";
}

.control.has-icons-left .textarea {
  padding-left: 2.5em;
}

@each $name, $pair in $colors {
  $color: nth($pair, 1);
  .buttons.has-addons .button.is-#{$name} {
    border-color: rgba(lighten($color, 20%), 0.4)
  }
  .buttons.has-addons .button.is-#{$name}.is-light {
    border-color: rgba($color, 0.2)
  }
}

@include mobile {
  .button .is-icon-mobile:first-child:not(:last-child) {
    margin-left: unset;
    margin-right: unset;
  }
  .hero-body {
    padding: 1rem 0.5rem;
  }
}

.fa-ml {
  margin-left: 0.4em;
}
.fa-mr {
  margin-right: 0.4em;
}

.is-flex-center {
  display: flex;
  align-items: center;
}

.is-flex-space-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.is-flex-grow {
  flex-grow: 2 !important;
}

.is-navbar-label {
  @include until($navbar-breakpoint) {
      display: initial !important;
    }
  @include from($navbar-breakpoint) {
    @include mobile {
      display: none !important;
    }
  }
}

.sync-tablet {
  @include until($navbar-breakpoint) {
    display: none !important;
  }
}

.sync-mobile {
  margin-left: auto;
  flex-direction: row-reverse;
  flex-grow: 2 !important;
  @include from($navbar-breakpoint) {
    display: none !important;
  }
}

.info-label {
  display: block;
  white-space: nowrap;
  @include small-screen {
    max-width: 150px;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

.info-value {
  display: block;
  white-space: nowrap;
}

.statistics-item {
  display: inline;
  @include very-small-screen {
    display: none;
  }
}
.statistics-item:not(:last-child)::after {
  content: "|";
}
.statistics-item-min,
.statistics-item-mean,
.statistics-item-max {
  padding: 0 0.5rem !important;
  @include mobile {
    padding: 0 0.1rem !important;
    font-size: 0.8em;
    vertical-align: middle;
  }
}

.b-slider .b-slider-thumb {
  padding: 16px 8px !important;
  font-size: 0.9rem;
  width: auto;
  display: flex;
  align-items: center;
}

.navbar .is-auto-expand {
  width:40px;
}

.navbar .is-auto-expand:not(.is-expanded) input {
  cursor: pointer;
  background-color: transparent;
  border-color: transparent;
  box-shadow: none;
}

.navbar .is-auto-expand:not(.is-expanded) .icon {
  color: #fff !important;
}

.navbar .is-auto-expand.is-expanded {
  position: fixed;
  left: 0;
  right: 0;
  z-index: 4;
  width: 100%;
  padding: 0.5em;
}

.navbar .is-auto-expand:not(.is-expanded) .dropdown-menu {
  display: none;
}

.navbar .is-auto-expand .delete {
  position: fixed;
  right: 18px;
  top: 14px;
}

.navbar .is-auto-expand .is-loading {
  position: fixed;
  right: 18px;
  top: 14px;
  height: 24px;
  width: 24px;
  color: #dbdbdb;
}

table.is-vertical-centered td, table.is-vertical-centered th {
  vertical-align: middle;
}

table.has-buttons {
  table-layout: fixed;
  th.is-button {
    width: 4em;
  }
}

@keyframes placeHolderShimmer {
  0% {
    background-position: 200%;
  }
  100% {
    background-position: -100%;
  }
}
.loading-info {
  width: 100%;
  border-radius: 0.25em;
  animation-duration: 1.5s;
  animation-fill-mode: forwards;
  animation-iteration-count: infinite;
  animation-name: placeHolderShimmer;
  animation-timing-function: linear;
  background: linear-gradient(45deg, $grey-lightest 8%, $grey-lighter 18%, $grey-lightest 33%);
  background-size: 300% 100%;
}
.loading-info::after {
  content: ".";
  visibility: hidden;
}
[data-theme="dark"] .loading-info {
  background: linear-gradient(45deg,  $grey-darker  8%, $grey-dark 18%,  $grey-darker  33%);
  background-size: 300% 100%;
}


.loading-overlay {
  z-index: 29;
}

th.is-required::after,
.is-required .label::after {
  content: " *";
  color: $danger;
}

.is-selectable {
  -webkit-touch-callout: text;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

.is-selectable-all {
  user-select: text;
  -webkit-user-select: text;
  -webkit-touch-callout: all;
  -webkit-user-select: all;
  -moz-user-select: all;
  -ms-user-select: text;
  user-select: all;
}

.card-header-title .icon {
  margin-right: 0.75rem;
}

.card-content {
  @include mobile {
    padding: 1rem;
  }
}

.is-fullheight {
  height: 100%
}

.scenario-element:not(:last-child) {
  margin-bottom: 0.75rem;
}
.scenario-element > fieldset {
  width: 100%;
}
.scenario-element .scenario-rule,
.scenario-element .scenario-ask {
  border-left: lightgray solid;
}

body > .autocomplete .dropdown-menu {
  min-width: unset;
}

ul.tree {
  position: relative;

  li {
    padding-top: 0.5em;
    position: relative;
  }

  ul {
    padding-left: 0.5em;

    li {
      padding-left: 1.5em;
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      box-sizing: border-box;

      &:before {
        position: absolute;
        top: 1.2em;
        left: 0;
        width: 1em;
        height: 1px;
        margin: auto;
        content: '';
        background-color: $grey-light;
      }

      &.has-medium-tag:before {
        top: 1.8em;
        left: 0.5em;
        width: 1.0em;
      }

      &:after {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        width: 1px;
        height: 100%;
        content: '';
        background-color: $grey-light;
      }

      &.has-medium-tag:after {
        left: 0.5em;
      }

      &:last-child:after {
        height: 1.2em;
      }

      &.has-medium-tag:last-child:after {
        height: 1.8em;
      }
    }
  }
}

input {
  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  &[type=number] {
    -moz-appearance: textfield;
  }
}

#search-logs {
  @include widescreen {
    min-width: 18em;
  }
  @include fullhd {
    min-width: 28em;
  }
}
.fa-vue-dom {
  content:url(./../assets/home.png);
  position: relative;
  top: 0.125em;
  width: 1.25em;
  padding: 0 0.125em;
}
.fa-android {
  color: #3dda84;
}
.fa-ubuntu {
  color: #dd4814;
}
.fa-windows {
  color: #0072cc;
}
.fa-redhat {
  color: #df1b22;
}
.fa-fedora {
  color: #4d9acf;
}
.fa-suse {
  color: #2eb172;
}
.fa-firefox-browser {
  color: #f16d2d;
}
.fa-chrome {
  color: #4383e9;
}
.fa-safari {
  color: #248ae5;
}
.fa-edge {
  color: #2f71b2;
}
.fa-internet-explorer {
  color: #00b2e6;
}
